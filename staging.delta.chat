## /etc/nginx/sites-enabled/delta.chat
##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

map $http_accept_language $lang {
     default "en";
     ~en en;
     ~sk sk;
     ~ca ca;
     ~de de;
     ~es es;
     ~fr fr;
     ~it it;
     ~nb nb;
     ~pl pl;
     ~pt pt;
     ~ru ru;
     ~sq sq;
     ~uk uk;
 }

# Default server configuration
#
server {

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# include snippets/snakeoil.conf;

	root /var/www/html/staging;

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.nginx-debian.html;

	server_name staging.delta.chat; 

 	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ $uri.html @lang;
	}


  	location @lang {
	    default_type 'text/plain';
 	    rewrite_by_lua '
 		function Set (list)
 		    local set = {}
 		    for _, l in ipairs(list) do set[l] = true end
 		    return set
 		end
 		local supported = Set {"ca","de","en","es","fr","it","nb","pl","pt","ru","sq","uk"}
 		if not ngx.var.http_accept_language then
 	            ngx.redirect("/en"..ngx.var.request_uri)
         	end
 	        for lang in (ngx.var.http_accept_language .. ","):gmatch("([^,]*),") do
                    for supported, translated in pairs(supported) do
                        if string.sub(lang, 0, 2) == supported then
 		            ngx.redirect("https://staging.delta.chat/"..supported..ngx.var.request_uri)
 		        end
 		    end
 	        end
 	    ';
 	}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}

    listen [::]:443 ssl; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/staging.delta.chat/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/staging.delta.chat/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


    # Redirects (former netlify _redirects)
    rewrite /apk https://download.delta.chat/android/deltachat-stable.apk permanent;
    rewrite /new https://download.delta.chat/android/deltachat-stable.apk permanent;

    rewrite /de/delta-macht-chatten-besser  /en/2017-05-31-delta-makes-chatting-better#german permanent;
    rewrite /de/david-gegen-goliath         /en/2017-05-31-delta-makes-chatting-better#david-gegen-goliath---wie-kam-es-dazu permanent;
    rewrite /en/2018-07-19-introducing-support-forum  /en/2018-08-19-introducing-support-forum permanent;
    rewrite /en/spec      https://github.com/deltachat/spec/blob/master/spec.md#email-chat-specification permanent;
    rewrite /en/standards https://github.com/deltachat/deltachat-android/blob/master/standards.md#standards-used-in-delta-chat permanent;

    rewrite /de/support  /de/contribute permanent;
    rewrite /en/support  /en/contribute permanent;
    rewrite /es/support  /es/contribute permanent;
    rewrite /it/support  /it/contribute permanent;
    rewrite /pt/support  /pt/contribute permanent;
    rewrite /ru/support  /ru/contribute permanent;

}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}

server {

	listen 80;
	listen [::]:80;

	server_name staging.delta.chat;
        if ($host = staging.delta.chat) {
	        return 301 https://$host$request_uri;
	}




}
