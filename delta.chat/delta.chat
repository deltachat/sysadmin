## /etc/nginx/sites-enabled/delta.chat
##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	root /var/www/html/_site;

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.nginx-debian.html;

	server_name delta.chat; 



	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ $uri.html =404;
	}

	# pass PHP scripts to FastCGI server
	#
	#location ~ \.php$ {
	#	include snippets/fastcgi-php.conf;
	#
	#	# With php-fpm (or other unix sockets):
	#	fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;
	#	# With php-cgi (or other tcp sockets):
	#	fastcgi_pass 127.0.0.1:9000;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}

    listen [::]:443 ssl; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/delta.chat/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/delta.chat/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


    # Redirects (former netlify _redirects)
    rewrite /apk https://download.delta.chat/android/deltachat-stable.apk permanent;
    rewrite /new https://download.delta.chat/android/deltachat-stable.apk permanent;

    rewrite /de/delta-macht-chatten-besser  /en/2017-05-31-delta-makes-chatting-better#german permanent;
    rewrite /de/david-gegen-goliath         /en/2017-05-31-delta-makes-chatting-better#david-gegen-goliath---wie-kam-es-dazu permanent;
    rewrite /en/2018-07-19-introducing-support-forum  /en/2018-08-19-introducing-support-forum permanent;
    rewrite /en/spec      https://github.com/deltachat/spec/blob/master/spec.md#email-chat-specification permanent;
    rewrite /en/standards https://github.com/deltachat/deltachat-android/blob/master/standards.md#standards-used-in-delta-chat permanent;

    rewrite /de/support  /de/contribute permanent;
    rewrite /en/support  /en/contribute permanent;
    rewrite /es/support  /es/contribute permanent;
    rewrite /it/support  /it/contribute permanent;
    rewrite /pt/support  /pt/contribute permanent;
    rewrite /ru/support  /ru/contribute permanent;
}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}

server {

	listen 80 default_server;
	listen [::]:80 default_server;

	server_name delta.chat;
        if ($host = delta.chat) {
	        return 301 https://$host$request_uri;
	}


}
